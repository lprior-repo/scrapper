services:
  neo4j:
    image: neo4j:5.15-community
    container_name: overseer-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_jvm_additional=-Xms512m -Xmx1G
      - NEO4J_server_config_strict__validation_enabled=false
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 8
      start_period: 60s
    networks:
      - overseer

  app:
    build: .
    container_name: overseer-app
    depends_on:
      neo4j:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - ENVIRONMENT=production
    networks:
      - overseer
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    container_name: overseer-ui
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8081
    networks:
      - overseer
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: overseer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - overseer
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s

volumes:
  neo4j_data:
  neo4j_logs:
  redis_data:

networks:
  overseer:
    driver: bridge
